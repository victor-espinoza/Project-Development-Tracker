<%- include('partials/header') -%>

<h1><%=title %></h1>



<ul class="no-bullets">
  <!-- Populate table  -->
  <% data.sprints.forEach(item => {%>
    <li>
      <% for (const project of data.projects) {%>
        <% if (project.project_id === item.project_id) { %>
          <div class="input-field">
            <div name="projectId">
              <label for="projectId" class="label-background">Project:</label>
              <%=project.name%>
            </div>
          </div>
          <% break; %>
        <% } %>
      <% } %>

      <div class="input-field">
        <label for="sprintName" class="label-background">Sprint Name:</label>
        <%=item.name%>
      </div>
      

      <div class="input-field">
        <div name="status">
          <label for="status" class="label-background">Status:</label>
          <%=item.sprint_status%>
        </div>
      </div>

      <div class="input-field-center"> 
        <form action="/update-sprint-focus" method="POST" id="sprint-focus-form<%=item.sprint_id %>">
          <label for="sprint-focus-check" class="label-background">Focus:</label>
          <input type="hidden" value="<%=item.sprint_id %>" name="sprint_id"/>
          <% if (item.focus_flag > 0) {%>
            &#x2714
          <%} else { %>
            &#x2718
          <%} %>
        </form>
      </div>

      <div class="input-field">
        <div name="startDate">
          <label for="startDate" class="label-background">Start Date:</label>
          <%=item.start_date%>
        </div>
      </div>

      <div class="input-field">
        <div name="dueDate">
          <label for="dueDate" class="label-background">Due Date:</label>
          <%=item.due_date%>
        </div>
      </div>
    </li>

    <li id="after-text-box">
      <div class="input-field">
        <label for="newSprintReview" class="label-background">Sprint Review:</label>
        <textarea name="newSprintReview" cols="50" rows="10" readonly><%= item.sprint_review %></textarea>
      </div>
      
      <div id="input-field">
        <label for="newSprintRetrospective" class="label-background">Sprint Retrospective:</label>
        <textarea name="newSprintRetrospective" cols="50" rows="10" readonly><%= item.sprint_retrospective %></textarea>
      </div>
    </li>

    <li>    
      <div id="new-line">
        <label for="updateData" class="label-background">Update:</label>
        <form action="/update-sprint" method="GET">
          <input type="hidden" value="<%=item.sprint_id %>" name="sprint_id"/>
          <input type="submit" value="Update Sprint" name="updateData"/>
        </form>
      </div>
    
      <div id="new-line">
        <label for="deleteData" class="label-background">Delete:</label>
        <form action="/delete-sprint" method="POST">
          <input type="hidden" value="<%=item.sprint_id %>" name="sprint_id"/>
          <input type="submit" value="Delete Sprint" name="deleteData"/>
        </form>
      </div>
    </li>
    
  <% }); %>
</ul> 


<div id="after-text-box">
  <h1 id="heading">Tasks:</h1>
  <%- include('partials/tasks') -%>
</div>

<div id="new-line">
  <pre>
    <%= JSON.stringify(data, null, 2) %>
  </pre>
</div>


<div class="chartCard">
  <div class="chartBox">
    <canvas id="myChart"></canvas>
  </div>
</div>

<%-'<script>'%>
  let tasks = <%-JSON.stringify(data.tasks)%>;
<%-'</script>'%>


<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-plugin-datalabels/2.2.0/chartjs-plugin-datalabels.min.js" integrity="sha512-JPcRR8yFa8mmCsfrw4TNte1ZvF1e3+1SdGMslZvmrzDYxS69J7J49vkFL8u6u8PlPJK+H3voElBtUCzaXj+6ig==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>

  let taskNames = [];
  let taskData = [];
  for (task of tasks) {
    taskNames.push(JSON.stringify(task.name));
    taskData.push(task.task_status);
  }

  const map = taskData.reduce((acc, e) => acc.set(e, (acc.get(e) || 0) + 1), new Map());

  console.log(map);
  console.log([...map.keys()]);
  console.log([...map.values()]);
  //setup
  const data = {
    labels: [...map.keys()],
    datasets: [{
      label: 'Tasks',
      data: [...map.values()],
      backgroundColor: [
        'rgba(255, 26, 104, 0.2)',
        'rgba(54, 162, 235, 0.2)',
        'rgba(255, 206, 86, 0.2)',
        'rgba(75, 192, 192, 0.2)',
        'rgba(153, 102, 255, 0.2)',
        'rgba(255, 159, 64, 0.2)',
        'rgba(0, 0, 0, 0.2)'
      ],
      borderColor: [
        'rgba(255, 26, 104, 1)',
        'rgba(54, 162, 235, 1)',
        'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)',
        'rgba(153, 102, 255, 1)',
        'rgba(255, 159, 64, 1)',
        'rgba(0, 0, 0, 1)'
      ],
      borderWidth: 1
    }]
  };



  // config 
  const config = {
    type: 'doughnut',
    data,
    options: {
      legend: {
          //   display: false
          position: 'right'
      },
      plugins: {
        tooltip: {
          enabled: false
        },
        datalabels: {
            align: 'center',
            display: 'auto',
            color: 'black',
            font: {
              weight: 'bold'
            },
            formatter: (value, ctx) => {
              const total = ctx.chart.getDatasetMeta(0).total;
              let percentage = (value * 100 / total).toFixed(2) + "%";
              const display = [`${value}`, `(${percentage})`]
              return display;
            },
        }
      }
    },
    plugins: [ChartDataLabels]
  };

  // render init block
  const myChart = new Chart(
    document.getElementById('myChart'),
    config
  );

</script>

<%- include('partials/footer') -%>